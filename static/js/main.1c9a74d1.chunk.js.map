{"version":3,"sources":["moviePlay.js","movie.js","index.js"],"names":["MoviePlay","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","prototype","id","PropTypes","number","isRequired","string","arrayOf","Movie","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oUAIA,SAASA,EAAT,GAA8D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACb,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,gBACvBI,OAIP,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAG,KAA/C,SAMRb,EAAUc,UAAY,CACpBC,GAAIC,IAAUC,OAAOC,WACrBjB,KAAMe,IAAUC,OAAOC,WACvBhB,MAAOc,IAAUG,OAAOD,WACxBf,QAASa,IAAUG,OAAOD,WAC1Bd,OAAQY,IAAUG,OAAOD,WACzBb,OAAQW,IAAUI,QAAQJ,IAAUG,QAAQD,YAG/BlB,QC4BAqB,G,iNAvDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IACd,4DAPQ,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAVzB,2C,mFAgBVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OAEE,6BAASlB,UAAU,aAChBiB,EACC,yBAAKjB,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAGF,yBAAKA,UAAU,UACZkB,EAAOf,KAAI,SAAAuB,GACV,OACE,kBAAC,EAAD,CACEpB,IAAKoB,EAAMjB,GACXA,GAAIiB,EAAMjB,GACVd,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbC,QAAS6B,EAAM7B,QACfC,OAAQ4B,EAAMC,mBACd5B,OAAQ2B,EAAM3B,mB,GA7CZ6B,IAAMC,YCK1BC,IAASC,OAAO,kBAAC,EAAD,MAAWC,SAASC,eAAe,U","file":"static/js/main.1c9a74d1.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./moviePlay.css\";\n\nfunction MoviePlay({ year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title}></img>\n      <div className=\"movie_data\">\n        <h3 className=\"movie_title\">{title}</h3>\n        <h5 className=\"movie_year\">{year}</h5>\n        <ul className=\"movie_genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres_genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <p className=\"movie_summary\">{summary.slice(0, 200)}...</p>\n      </div>\n    </div>\n  );\n}\n\nMoviePlay.prototype = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default MoviePlay;\n","import React from \"react\";\nimport axios from \"axios\";\nimport MoviePlay from \"./moviePlay\";\nimport \"./movie.css\";\n\nclass Movie extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    //비동기 함수 async/await\n    const {\n      data: {\n        data: { movies } //해체할당\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    //axios가 호출될 때까지 기다린다\n    this.setState({ movies, isLoading: false });\n    //movies: 프로퍼티와 value가 같으면 생략 가능.\n    //원래 { movies(state에서 설정한 것):movies(axios에서 불러온 data객체) }였다\n  };\n  componentDidMount() {\n    //html이 렌더링 된 후 아래의 로직 호출\n    this.getMovies();\n  }\n  // npm i axios설치\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      //jsx에서 html태그에 class를 주고싶을 경우 'className'키워드를 사용한다\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => {\n              return (\n                <MoviePlay\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Movie;\n","//React Framework의 메인 파일. 아래와 같은 형식으로 적는다\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import Props from \"./props\";\n// import Lifecycle from \"./lifecycle\";\nimport Movie from \"./movie\";\n// import 파일이름(앞글자 대문자) from \"(경로)+파일이름\" 형식으로 적는다\n\n// ReactDOM.render(<Props />, document.getElementById(\"App\"));\n// ReactDOM.render(<Lifecycle />, document.getElementById(\"App\"));\nReactDOM.render(<Movie />, document.getElementById(\"App\"));\n//<파일이름 />의 태그를 component라고 부르며, HTML을 반환하는 역할을 한다.\n//앞글자는 항상 대문자로 써야 한다.\n\n//React Framework는 하나의 component만을 render할 수 있다.\n//React Framework에서 JS내부의 HTML을 jsx라고 부른다.\n/*Id \"App\"은 public - index.html내부의 div태그가 가진 id값이다. \nreact의 구현 방식은 scr파일에서 만든 jsx들을 public파일(html)의 div태그로 끼워넣는 방식이다*/\n"],"sourceRoot":""}